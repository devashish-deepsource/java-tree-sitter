plugins {
    id "java-library"
    id "maven-publish"
}

group = "ai.serenade"
version = "1.1.1"

String lib = (System.getProperty("os.name").contains("Mac")) ? "${project.projectDir}/libjava-tree-sitter.dylib" : "${project.projectDir}/libjava-tree-sitter.so"

repositories {
    mavenLocal()
    mavenCentral()
}

task buildSharedObject {
    inputs.file "lib/ai_serenade_treesitter_Languages.cc"
    inputs.file "lib/ai_serenade_treesitter_Languages.h"
    inputs.file "lib/ai_serenade_treesitter_TreeSitter.cc"
    inputs.file "lib/ai_serenade_treesitter_TreeSitter.h"
    outputs.file "libjava-tree-sitter.so"

    doLast {
        def env = [
                JAVA_HOME: System.getenv("JAVA_HOME"),
                MACOSX_DEPLOYMENT_TARGET: "12"
        ]
        exec {

            environment << env
            commandLine "./build.py", "-o", "libjava-tree-sitter", "tree-sitter-java"
        }
    }
}

clean {
    delete "libjava-tree-sitter.so"
}

compileJava {
    options.compilerArgs += ["-h", "${project.projectDir.toString()}/lib"]
}

compileTestJava {
    dependsOn buildSharedObject
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

dependencies {
    testImplementation "org.junit.jupiter:junit-jupiter:5.8.2"
}

test {
    useJUnitPlatform()
        testLogging.showStandardStreams = true
    System.out.println(lib)
    environment "JAVA_TREE_SITTER", lib
}
